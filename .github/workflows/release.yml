name: Create Release

on:
  workflow_dispatch:

permissions:
  contents: write  # Ensure write permissions for creating releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-${{ runner.os }}-

    - name: Install dependencies
      run: npm install

    - name: Get package version
      id: get_version
      run: |
        VERSION=$(node -e "console.log(require('./package.json').version)")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create new release (single source of truth)
      id: create_release
      uses: actions/github-script@v7
      env:
        VERSION: ${{ env.VERSION }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const { VERSION } = process.env;
            console.log(`Creating release v${VERSION}...`);

            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${VERSION}`,
              name: `v${VERSION}`,
              draft: true,
            });

            console.log(`Release v${VERSION} created successfully.`);
            core.setOutput("release_id", release.data.id);
            core.setOutput("upload_url", release.data.upload_url);
          } catch (error) {
            console.error(`Failed to create release: ${error.message}`);
            core.setFailed(error.message);
          }

    - name: Build project
      run: npm run build

    - name: Run sense
      run: npm run sense

    - name: Zip extension
      run: zip -r user-agent-reporter.zip user-agent-reporter-ext

    - name: Upload release asset (attach to existing release)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./user-agent-reporter.zip
        asset_name: user-agent-reporter.zip
        asset_content_type: application/zip

    - name: Post release link
      run: 'echo "âœ… Release created successfully: https://github.com/${{ github.repository }}/releases/tag/v${{ env.VERSION }}"'
